---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  serviceName: {{ .Chart.Name }}
  replicas: {{ pluck .Values.global.env .Values.rmq.replicas | first | default .Values.rmq.replicas._default }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      serviceAccountName: {{ .Chart.Name }}
      initContainers:
      - name: copy-rabbitmq-config
        image: busybox
        command: ['sh', '-c', 'cp /configmap/* /etc/rabbitmq; rm -f /var/lib/rabbitmq/.erlang.cookie']
        volumeMounts:
        - name: configmap
          mountPath: /configmap
        - name: config
          mountPath: /etc/rabbitmq
        - name: data
          mountPath: /var/lib/rabbitmq
      containers:
      - name: rabbitmq
        image: rabbitmq:3.8.2-management-alpine
        ports:
        - name: epmd
          protocol: TCP
          containerPort: 4369
        - name: amqp
          protocol: TCP
          containerPort: 5672
        - name: dist
          protocol: TCP
          containerPort: 25672
        - name: http
          protocol: TCP
          containerPort: 15672
        livenessProbe:
          exec:
            command:
            - rabbitmqctl
            - status
          initialDelaySeconds: 120
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - rabbitmqctl
            - status
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 5
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        - name: RABBITMQ_NODENAME
          value: rabbit@$(MY_POD_NAME).{{ .Chart.Name }}.$(MY_POD_NAMESPACE).svc.cluster.local
        - name: K8S_HOSTNAME_SUFFIX
          value: .{{ .Chart.Name }}.$(MY_POD_NAMESPACE).svc.cluster.local
        - name: K8S_SERVICE_NAME
          value: {{ .Chart.Name }}
        - name: RABBITMQ_ERLANG_COOKIE
          value: "{{ pluck .Values.global.env .Values.rmq.cookie | first | default .Values.rmq.cookie._default }}"
        - name: RABBITMQ_HIPE_COMPILE
          value: 'false'
        - name: RABBITMQ_DEFAULT_USER
          value: "{{ pluck .Values.global.env .Values.rmq.user | first | default .Values.rmq.user._default }}"
        - name: RABBITMQ_DEFAULT_PASS
          value: "{{ pluck .Values.global.env .Values.rmq.pass | first | default .Values.rmq.pass._default }}"
        - name: RABBITMQ_DEFAULT_VHOST
          value: '/'
        - name: KUBERNETES_DEPLOYED
          value: "{{ now }}"
        - name: RABBITMQ_VM_MEMORY_HIGH_WATERMARK
          value: "0.8"
        volumeMounts:
        - name: data
          mountPath: /var/lib/rabbitmq
        - name: config
          mountPath: /etc/rabbitmq
{{- if eq .Values.global.env "production" }}
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            memory: 2Gi
{{- end }}
      - name: exporter
        image: kbudde/rabbitmq-exporter:v0.29.0
        ports:
        - containerPort: 9090
          name: http-metrics
        env:
        - name: RABBIT_USER
          value: "{{ pluck .Values.global.env .Values.rmq.user | first | default .Values.rmq.user._default }}"
        - name: RABBIT_PASSWORD
          value: "{{ pluck .Values.global.env .Values.rmq.pass | first | default .Values.rmq.pass._default }}"
        - name: INCLUDE_QUEUES
          value: .*
        - name: SKIP_QUEUES
          value: ^$
      volumes:
      - name: config
        emptyDir: {}
      - name: configmap
        configMap:
          name: {{ .Chart.Name }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "{{ pluck .Values.global.env .Values.rmq.pvc.size | first | default .Values.rmq.pvc.size._default }}"
      storageClassName: {{ pluck .Values.global.env .Values.global.system.storageclass | first | default .Values.global.system.storageclass._default }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
spec:
  selector:
    app: {{ .Chart.Name }}
  type: ClusterIP
  clusterIP: None
  ports:
  - name: epmd
    protocol: TCP
    port: 4369
    targetPort: epmd
  - name: amqp
    protocol: TCP
    port: 5672
    targetPort: amqp
  - name: http
    protocol: TCP
    port: 15672
    targetPort: http
  - name: dist
    protocol: TCP
    port: 25672
    targetPort: dist
  - name: http-metrics
    protocol: TCP
    port: 9090
    targetPort: http-metrics
